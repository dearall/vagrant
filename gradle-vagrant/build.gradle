import com.manning.gia.vm.Vagrant

ext.targetedVagrantProjectDir = file('../standalone/develop/tomcat')

tasks.register('vagrantUp', Vagrant) {
    group = 'Vagrant Control'
    description = 'starts and provisions the vagrant environment'

    commands = ['up', '--color', '--provision']
    dir = targetedVagrantProjectDir
}

tasks.register('vagrantHalt', Vagrant) {
    group = 'Vagrant Control'
    description = 'stops the vagrant machine'

    commands = ['halt']
    dir = targetedVagrantProjectDir
}

tasks.register('vagrantDestroy', Vagrant) {
    group = 'Vagrant Control'
    description = 'stops and deletes all traces of the vagrant machine'

    commands = ['destroy', '--force']
    dir = targetedVagrantProjectDir
}

tasks.register('vagrantSshConfig', Vagrant) {
    group = 'Vagrant Control'
    description = 'outputs OpenSSH valid configuration to connect to the machine'

    commands = ['ssh-config']
    dir = targetedVagrantProjectDir
}

tasks.register('vagrantStatus', Vagrant) {
    group = 'Vagrant Control'
    description = 'outputs status of the vagrant machine'

    commands = ['status']
    dir = targetedVagrantProjectDir
}

tasks.register('vagrantSuspend', Vagrant) {
    group = 'Vagrant Control'
    description = 'suspends the machine'

    commands = ['suspend']
    dir = targetedVagrantProjectDir
}

tasks.register('vagrantResume', Vagrant) {
    group = 'Vagrant Control'
    description = 'resume a suspended vagrant machine'

    commands = ['resume']
    dir = targetedVagrantProjectDir
}

tasks.register('vagrantReload', Vagrant) {
    group = 'Vagrant Control'
    description = 'restarts vagrant machine, loads new Vagrantfile configuration'

    commands = ['reload']
    dir = targetedVagrantProjectDir
}
