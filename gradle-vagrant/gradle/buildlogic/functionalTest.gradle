// The drivers we want to use
def drivers = ['firefox', 'chrome', 'chromeHeadless']

drivers.each { driver ->
    //功能测试： 创建 RemoteFunctionalTest
    tasks.register("${driver}RemoteFunctionalTest", Test) {
        group = 'verification'
        description = "Runs remote functional tests with ${driver}"

        // Discover and execute JUnit4-based tests
        useJUnit()

        // Fail the 'test' task on the first test failure
        failFast = true

        testLogging {
            // show standard out and standard error of the test JVM(s) on the console
            showStandardStreams true
            // Sets the events to be logged.
            events 'passed', 'skipped', 'failed'
        }

        outputs.upToDateWhen {
            false   // Always run tests
        }

        // 设置浏览器驱动文件路径
        systemProperty 'webdriver.chrome.driver', 'D:\\env\\webdriver\\chromedriver.exe'
        systemProperty 'webdriver.firefox.driver', 'D:\\env\\webdriver\\geckodriver.exe'

        // geb 强制属性，指定浏览器类型，由 Groovy ConfigSlurper 读取 resources/GebConfig.groovy 文件确定
        systemProperty 'geb.env', driver
        systemProperty 'geb.build.reportsDir', reporting.file("geb/$name")
        systemProperty 'geb.build.baseUrl', "http://${config.tomcat.hostname}:${config.tomcat.port}/${config.tomcat.context}/"
    }
}

tasks.register('remoteFunctionalTest') {
    dependsOn(firefoxRemoteFunctionalTest, chromeRemoteFunctionalTest, chromeHeadlessRemoteFunctionalTest)

    group = 'verification'
    description = "Runs remote functional tests with 'firefox', 'chrome', 'chrome --headless --disable-gpu' by geb " +
            'and selenium tools.'
}

dependencies {
    implementation 'org.gebish:geb-core:5.1'
    implementation 'org.gebish:geb-junit4:5.1'
    testImplementation 'junit:junit:4.13.2'

    testImplementation 'org.seleniumhq.selenium:selenium-api:3.141.59'
    testImplementation 'org.seleniumhq.selenium:selenium-firefox-driver:3.141.59'
    testImplementation 'org.seleniumhq.selenium:selenium-chrome-driver:3.141.59'
}
